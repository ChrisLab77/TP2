apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Values.name}}
data:
  config.properties: |-
    Key={{.Values.Key}}
{{.Values.env.config.properties | b64dec | indent 4}}
  abc.properties: |-
{{.Values.env.config.properties | b64dec | indent 4}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{.Values.name}}
stringData:
{{.Values.env.secrets | toYaml | indent 4}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.name}}
spec:
  replicas: {{int .Values.replicas}}
  selector:
    matchLabels:
      app: {{.Values.label}}
  template:
    metadata:
      labels:
        app: {{.Values.label}}
    spec:
      containers:
      - name: {{.Values.name}}
        image: {{.Values.image}}
        ports:
        - containerPort: {{.Values.serviceTargetPort}}
        envFrom:
        - configMapRef:
            name: {{.Values.name}}
        {{- if .Values.env.secrets}}
        - secretRef:
            name: {{.Values.name}}
        {{- end}}
        volumeMounts:
        - name: {{.Values.name}}
          mountPath: {{.Values.mountpathname}}
      volumes:
        - name: {{.Values.name}}
          configMap:
            name: {{.Values.name}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{.Values.name}}
  labels:
    app: {{.Values.label}}
spec:
  type: {{.Values.serviceType}}
  selector:
    app: {{.Values.label}}
  ports:
  - port: {{.Values.servicePort}}
    targetPort: {{.Values.serviceTargetPort}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{.Values.name}}
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "ingress-webapps"
spec:
  rules:
  - http:
      paths:
      - path: "/"
        pathType: {{.Values.pathtypee}}
        backend:
          service:
            name: {{.Values.name}}
            port:
              number: {{.Values.servicePort}}
